# general
set shellopts '-eu'
set autoquit
set ifs "\n"
set mouse
set scrolloff 10
set hidden
set drawbox
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set previewer ~/.config/lf/scope

# custom commands
cmd mkdir $mkdir -p "$@"

cmd nvim $nvim "$@"

cmd paste-overwrite &{{
	set -f
	mode=$(head -1 ~/.local/share/lf/files)
	list=$(sed 1d ~/.local/share/lf/files)
	set -- _ $list; shift
	[ $# -gt 0 ] || exit
	case $mode in
		copy)
			rsync -r "$@" ./
			;;
		move)
			rsync -r --remove-source-files "$@" ./
			;;
	esac
	lf -remote 'save\nmove\n'
	lf -remote "send $id load"
	lf -remote "send $id echo \"\033[0;32mpasted $# file(s)\033[0m\""
}}

cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
	image/vnd.djvu|application/pdf|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty|application/x-subrip) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*|png|jpg|jpeg|gif|webp|avif|tif|ico) setsid -f imv-dir $fx >/dev/null 2>&1 ;;
	audio/*|video/x-ms-asf) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd.djvu|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
	application/vnd.openxmlformats-officedocument.wordprocessingml.document|application/vnd.oasis.opendocument.text|application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|application/vnd.oasis.opendocument.spreadsheet|application/vnd.oasis.opendocument.spreadsheet-template|application/vnd.openxmlformats-officedocument.presentationml.presentation|application/vnd.oasis.opendocument.presentation-template|application/vnd.oasis.opendocument.presentation|application/vnd.ms-powerpoint|application/vnd.oasis.opendocument.graphics|application/vnd.oasis.opendocument.graphics-template|application/vnd.oasis.opendocument.formula|application/vnd.oasis.opendocument.database) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
        application/octet-stream) case ${f##*.} in
			doc|docx|xls|xlsx|odt|ppt|pptx) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
			ghw) setsid -f gtkwave $f >/dev/null 2>&1 ;;
			ts) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
			*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	   	esac ;;
	*) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "Extract? [y/N]: "
	read ans
	[ $ans = "y" ] && {
		case $fx in
			*.tar.bz2)   tar xjfv $fx     ;;
			*.tar.gz)    tar xzfv $fx     ;;
			*.bz2)       bunzip2 -v $fx   ;;
			*.rar)       unrar e $fx      ;;
			*.gz)        gunzip -v $fx    ;;
			*.tar)       tar xfv $fx      ;;
			*.tbz2)      tar xjfv $fx     ;;
			*.tgz)       tar xzfv $fx     ;;
			*.zip)       unzip $fx        ;;
			*.Z)         uncompress $fx   ;;
			*.7z)        7z x $fx         ;;
			*.tar.xz)    tar xfv $fx      ;;
		esac
	}
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "Delete? [y/N]: "
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

# keybinds
map <delete> delete
map <backspace2> set hidden!
map s shell $SHELL
map <enter> open
map V push :nvim<space>
map n push :mkdir<space>""<left>

map <esc> quit
map dd cut
map dD delete
map yy copy
map pp paste
map po paste-overwrite
map a :rename
map r :rename
map <f-2> :rename
map e extract

map gh cd ~
map gg cd ~/stuffs/git
map gc cd ~/.config/
map gl cd ~/.local/
map ge cd /etc
map gu cd /usr
map gd cd /dev
map go cd /opt
map gv cd /var
map gm cd /media
map gi cd /run/media/
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map gr cd /

# disabled/unmapped binds
map d
map y
map p
